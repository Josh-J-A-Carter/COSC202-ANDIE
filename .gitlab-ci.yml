image: eclipse-temurin:17

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - package
  - deploy

compile-code:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - find src/cosc202/andie/ -type f -name "*.java" | xargs javac -d bin -classpath bin:lib/*
  artifacts:
    paths:
      - bin

build-javadoc:      # create javadocs
 stage: build
 script:
    - find src/cosc202/andie/ -type f -name "*.java" | xargs javadoc -d docs -classpath bin:lib/*
 artifacts:
  paths:
  - docs
 only:
 - main

unit-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Attempting to run unit tests..."
    - javac -d bin -classpath bin:lib/* src/test/cosc202/andie/*.java
    - java -jar lib/junit-platform-console-standalone-1.9.3.jar -cp bin --select-package test.cosc202.andie

create-jar:     # Create the JAR file
  stage: package
  script:
    #Copy resources/libraries into bin
    - cp -r src/resources bin
    - cp lib/flatlaf-3.1.1.jar bin
    - cp lib/flatlaf-intellij-themes-3.1.1.jar bin
    #Go into bin and extract each library
    - cd bin
    - for filename in ./*.jar; do
    - echo "merge library $filename to fat jar"
    - jar xf "$filename"
    - rm -rf META-INF
    - rm module-info.class #Don't need these files
    - rm "$filename" #We want to remove the original JAR file so that the resulting JAR isn't massive
    - done
    #Go back into parent directory (ANDIE) and create the JAR
    - cd ..
    - ls -a
    - jar --create --manifest=MANIFEST.MF --file=ANDIE.jar -C bin .
  artifacts:
    paths:
      - ANDIE.jar
  only:
  - main

pages: # publish website
 stage: deploy
 script:
    - mkdir public
    - cp -r docs public/
    - cp -r src/resources/icons/logo public/
    - cp ANDIE.jar public/
    - cp index.html public/
    - ls -R public | head
    - echo 'first ten public/ files listed'
 artifacts:
  paths:
  - public
 only:
 - main